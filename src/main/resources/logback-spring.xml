<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!--<include resource="org/springframework/boot/logging/logback/defaults.xml"/>
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder">
            <providers>
                <pattern>{"projectID" : "ELKProject"}</pattern>
                <timestamp/>
                <threadName/>
                <message/>
                <loggerName/>
                <logLevel/>
                <stackTrace/>
                <callerData/>
            </providers>
        </encoder>
    </appender>

    <appender name="STASH" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>logback/ELKProject.log</file>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder">
            <jsonGeneratorDecorator class="com.kbh.elk.app.config.logback.PrettyPrintingDecorator"/>
            <jsonFactoryDecorator class="com.kbh.elk.app.config.logback.DateDecorator"/>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logback/ELKProject.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>7</maxHistory>
        </rollingPolicy>
        <encoder class="net.logstash.logback.encoder.LogstashEncoder"/>
    </appender>

    <appender name="ES" class="ch.qos.logback.ext.loggly.LogglyAppender">
        <endpointUrl>https://search-hanwoolnet-elk-i22r3nl3keyd6cv5orzlacxo7y.ap-northeast-2.es.amazonaws.com?pipeline=ELKProjectPipeLine</endpointUrl>
        <pattern>%m</pattern>
    </appender>


    <logger name="org.springframework" level="INFO"/>
    <logger name="org.hibernate.SQL" level="DEBUG" />
    <logger name="org.hibernate.type.descriptor.sql.BasicBinder" level="TRACE" />
    <logger name="ELKProjectPipeLine" level="DEBUG" additivity="false">
        <appender-ref ref="ES"/>
    </logger>
    <root level="INFO">
        <appender-ref ref="STASH"/>
        <appender-ref ref="CONSOLE"/>
    </root>-->
    <appender name="ELASTIC" class="com.internetitem.logback.elasticsearch.ElasticsearchAppender">
        <!-- 필수값 -->
        <url>https://search-hanwoolnet-elk-i22r3nl3keyd6cv5orzlacxo7y.ap-northeast-2.es.amazonaws.com/_bulk</url> <!-- 적재하려는 ES 주소 -->
        <index>logs-%date{yyyy-MM-dd}</index>
        <type>log</type>
        <!-- 선택값 -->
        <!-- ES 내용을 콘솔이나 별도 로그파일로 보려고 하는 경우 반드시 logger name 지정해야 ES 적재 내용이 보임 -->
        <loggerName>ELKProjectJsonLogger</loggerName>
        <includeMdc>true</includeMdc> <!-- MDC 를 이용하여 적재하는 경우 (default false) -->
        <sleepTime>1000</sleepTime> <!-- sleepTime 후 비동기로 처리 (in ms, default 250) -->
        <errorsToStderr>true</errorsToStderr> <!-- 에러내용을 콘솔창에 표시 (default false) -->
        <logsToStderr>true</logsToStderr> <!-- 로그를 콘솔창에 표시 (default false) -->
        <headers>
            <header>
                <name>Content-Type</name>
                <value>application/json</value>
            </header>
        </headers>
    </appender>
    ...
    <!-- ES로 보내는 내용을 파일로 관리 -->
    <appender name="ES_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>utf-8</charset>
            <pattern>%msg</pattern>
        </encoder>
        <!-- 일자별로 로그파일 적용하기 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_FILE}_ES_%d{yyyy-MM-dd}_%i.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>100MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>
    ...
    <!-- com.myproject.filter 에서 설정한 로그 내용만 ES로 보낸다. -->
    <logger name="com.kbh.elk.app.filter.LogFilter" level="info" additivity="false">
        <appender-ref ref="ELASTIC" /> <!-- 앞에서 지정한 ES appender 로 보낸다. -->
    </logger>
</configuration>